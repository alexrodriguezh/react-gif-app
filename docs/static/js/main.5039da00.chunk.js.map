{"version":3,"sources":["helpers/getGif.js","components/GifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/AddCategories.js","App.js","index.js"],"names":["getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","i","id","title","images","downsized_medium","GifItem","className","src","alt","GifGrid","useState","loading","state","setState","useEffect","then","useFetchGifs","AddCategories","setCategories","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","App","categories","ReactDOM","render","document","getElementById"],"mappings":"8MAgBeA,EAhBH,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACLC,EADK,gDAC2CC,UAAUH,GADrD,+DAEQI,MAAMF,GAFd,cAELG,EAFK,gBAGUA,EAAKC,OAHf,uBAGJC,EAHI,EAGJA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EACxB,MAAO,CACHC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTV,IAAG,UAAEQ,EAAEG,cAAJ,aAAE,EAAUC,iBAAiBZ,QAT7B,kBAaJM,GAbI,4CAAH,sD,OCeGO,EAbC,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC1B,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,EAAOI,UAAU,2DACrC,qBAAKA,UAAU,sBAAf,SACA,qBAAKA,UAAU,oCAAf,SACI,mBAAGA,UAAU,2BAAb,SAA0CJ,YCoB3CO,EAxBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAEd,ECHwB,SAACA,GAEzB,MAA0BoB,mBAAS,CAC/Bb,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAM,SAAAf,GACHa,EAAS,CACLhB,KAAMG,EACNW,SAAS,SAGtB,CAACrB,IAEGsB,EDd2BI,CAAc1B,GAAlCa,EAAd,EAAQN,KAAcc,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIL,UAAU,iDAAd,SAAgEhB,IAC9DqB,GAAW,4CACb,qBAAKL,UAAU,mBAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAC,OACT,cAAC,EAAD,eAEQA,GADGA,EAAEC,a,OEmBtBgB,EAhCO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAErB,EAAoCR,mBAAS,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BP,GAAe,SAAAlB,GAAC,OAAKmB,GAAL,mBAAoBnB,OACpCoB,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAUR,EACVS,SAjBS,SAACN,GAClBF,EAAcE,EAAEO,OAAOF,QAiBfrB,UAAU,gCCIXwB,MAzBf,WAEE,MAAoCpB,mBAAS,CAAC,cAA9C,mBAAOqB,EAAP,KAAmBb,EAAnB,KAIA,OACE,qCACE,yCACA,cAAC,EAAD,CAAeA,cAAeA,IAC9B,8BAEMa,EAAWhC,KAAK,SAAAC,GAAC,OACf,cAAC,EAAD,CAEEV,SAAUU,GADLA,YCbrBgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5039da00.chunk.js","sourcesContent":["const getGif = async(category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=awOFujaD938lcJvQnMm3kqDs40wdPoqd`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n    \r\n    const gifs = data.map( i => {\r\n        return {\r\n            id: i.id,\r\n            title: i.title,\r\n            url: i.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}\r\n\r\nexport default getGif;","import React from 'react'\r\n\r\nconst GifItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"mx-2\">\r\n            <img src={url} alt={title} className=\"w-full object-cover object-center rounded-lg shadow-md\" />    \r\n            <div className=\"relative px-2 -mt-3\">\r\n            <div className=\"bg-white p-2 rounded-md shadow-lg\">\r\n                <p className=\"p-3 text-purple-700 mb-2\">{ title }</p>        \r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifItem\r\n","import React from 'react'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\nimport GifItem from './GifItem'\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category )\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"font-semibold text-blue-800 text-2xl ml-2 my-3\">{category}</h3>\r\n            { loading && <p>Cargando...</p>}\r\n            <div className=\"flex flex-nowrap\">\r\n                {\r\n                    images.map( i => (\r\n                        <GifItem \r\n                            key = {i.id}\r\n                            {...i}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            \r\n            \r\n        </> \r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from 'react'\r\nimport getGif from '../helpers/getGif'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGif( category )\r\n            .then( i => {\r\n                setState({\r\n                    data: i,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategories = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    } \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( i => [inputValue, ...i])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value = { inputValue }\r\n                onChange = { handleChange }\r\n                className=\"border-2 border-blue-600\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategories.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategories\r\n","import { useState } from \"react\";\nimport GifGrid from \"./components/GifGrid\";\nimport AddCategories from \"./components/AddCategories\";\n\nfunction App() {\n\n  const [categories, setCategories] = useState(['One Piece'])\n\n\n\n  return (\n    <>\n      <h2>App Gif</h2>\n      <AddCategories setCategories={setCategories} />\n      <div>\n          {\n            categories.map( i => (\n              <GifGrid \n                key={i}\n                category={i}\n              />\n            ))\n          }\n\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}